name: Publish

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: Publish
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: make install

      - name: Build
        run: make build

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Bump version
        continue-on-error: true
        id: graduateRelease
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"
          npx lerna version --conventional-commits --conventional-graduate --yes

      - name: Bump version fallback
        if: ${{ always() && steps.graduateRelease.outcome == 'failure'  }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"

          echo "Falling back to non-graduate release due to https://github.com/lerna/lerna/issues/2532"
          git stash
          npx lerna version --conventional-commits --yes

      - name: Publish
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          npm config set access public
          npx lerna publish --no-private from-git --yes
